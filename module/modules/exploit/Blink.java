package Notorious.module.modules.exploit;

import java.util.ArrayList;

import com.mojang.authlib.GameProfile;

import Notorious.Client;
import Notorious.event.Event;
import Notorious.event.events.EventPacket;
import Notorious.event.events.EventRenderGUI;
import Notorious.module.Category;
import Notorious.module.Module;
import Notorious.utils.Timer;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C01PacketChatMessage;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C16PacketClientStatus;

public class Blink extends Module {

	public ArrayList<Packet> packets = new ArrayList();

	private EntityOtherPlayerMP fakePlayer;

	Timer timer = new Timer();
	boolean idk = false;

	public Blink() {
		super("Blink", 0, true, Category.EXPLOIT, "Blinks");
	}

	@Override
	public void onEnable() {
		(this.fakePlayer = new EntityOtherPlayerMP(mc.theWorld,
				new GameProfile(mc.session.getProfile().getId(), mc.thePlayer.getName()))).setPositionAndRotation(
						mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, mc.thePlayer.rotationYaw,
						mc.thePlayer.rotationPitch);
		this.fakePlayer.rotationYawHead = mc.thePlayer.rotationYawHead;
		this.fakePlayer.inventory = mc.thePlayer.inventory;
		this.fakePlayer.setSneaking(mc.thePlayer.isSneaking());
		mc.theWorld.addEntityToWorld(-1338, this.fakePlayer);
	}

	@Override
	public void onEvent(Event e) {
		if (e instanceof EventPacket) {
			if (!idk) {
				if (((EventPacket) e).isSending()) {
					if (!(((EventPacket) e).getPacket() instanceof C01PacketChatMessage)
							&& !(((EventPacket) e).getPacket() instanceof C16PacketClientStatus)
							&& !(((EventPacket) e).getPacket() instanceof C00PacketKeepAlive) && mc.theWorld != null) {
						e.setCancelled(true);
					}
					final boolean input = mc.gameSettings.keyBindForward.pressed || mc.gameSettings.keyBindBack.pressed
							|| mc.gameSettings.keyBindRight.pressed || mc.gameSettings.keyBindLeft.pressed;
					if (input && ((EventPacket) e).getPacket() instanceof C03PacketPlayer) {
						this.packets.add(((EventPacket) e).getPacket());
					}
					if (((EventPacket) e).getPacket() instanceof C02PacketUseEntity
							|| ((EventPacket) e).getPacket() instanceof C08PacketPlayerBlockPlacement
							|| ((EventPacket) e).getPacket() instanceof C07PacketPlayerDigging) {
						this.packets.add(((EventPacket) e).getPacket());
					}
				}
			}
		}

		if (e instanceof EventRenderGUI) {
			Client.instance.font20.drawString("Packets: " + packets.size(),
					mc.displayWidth / 2 / 2 - (Client.instance.font20.getStringWidth("Packets: " + packets.size()) / 2),
					30, -1, false);
		}

	}

	@Override
	public void onDisable() {
		if (timer.hasTimeElapsed(500, true)) {
			idk = true;
			for (final Packet packet : this.packets) {
				if (packet instanceof C02PacketUseEntity || packet instanceof C08PacketPlayerBlockPlacement
						|| packet instanceof C07PacketPlayerDigging) {
					mc.thePlayer.swingItem();
				}
				mc.thePlayer.sendQueue.addToSendQueue(packet);
			}
			this.packets.clear();
			idk = false;
			try {
				if (this.fakePlayer != null) {
					mc.theWorld.removeEntity(this.fakePlayer);
				}
			} catch (Exception ex) {
			}
		}
	}

}
